{
  "version": 3,
  "sources": ["browser-external:node:http", "browser-external:node:https", "browser-external:node:zlib", "browser-external:node:stream", "browser-external:node:buffer", "browser-external:node:util", "browser-external:node:url", "browser-external:node:net", "../../node-fetch/src/index.js", "../../data-uri-to-buffer/src/index.ts", "../../node-fetch/src/body.js", "../../node-fetch/src/errors/base.js", "../../node-fetch/src/errors/fetch-error.js", "../../node-fetch/src/utils/is.js", "../../node-fetch/src/headers.js", "../../node-fetch/src/utils/is-redirect.js", "../../node-fetch/src/response.js", "../../node-fetch/src/request.js", "../../node-fetch/src/utils/get-search.js", "../../node-fetch/src/utils/referrer.js", "../../node-fetch/src/errors/abort-error.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:http\" has been externalized for browser compatibility. Cannot access \"node:http.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:https\" has been externalized for browser compatibility. Cannot access \"node:https.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:zlib\" has been externalized for browser compatibility. Cannot access \"node:zlib.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:stream\" has been externalized for browser compatibility. Cannot access \"node:stream.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:buffer\" has been externalized for browser compatibility. Cannot access \"node:buffer.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:util\" has been externalized for browser compatibility. Cannot access \"node:util.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:url\" has been externalized for browser compatibility. Cannot access \"node:url.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:net\" has been externalized for browser compatibility. Cannot access \"node:net.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/**\r\n * Index.js\r\n *\r\n * a request API compatible with window.fetch\r\n *\r\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\r\n */\r\n\r\nimport http from 'node:http';\r\nimport https from 'node:https';\r\nimport zlib from 'node:zlib';\r\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\r\nimport {Buffer} from 'node:buffer';\r\n\r\nimport dataUriToBuffer from 'data-uri-to-buffer';\r\n\r\nimport {writeToStream, clone} from './body.js';\r\nimport Response from './response.js';\r\nimport Headers, {fromRawHeaders} from './headers.js';\r\nimport Request, {getNodeRequestOptions} from './request.js';\r\nimport {FetchError} from './errors/fetch-error.js';\r\nimport {AbortError} from './errors/abort-error.js';\r\nimport {isRedirect} from './utils/is-redirect.js';\r\nimport {FormData} from 'formdata-polyfill/esm.min.js';\r\nimport {isDomainOrSubdomain, isSameProtocol} from './utils/is.js';\r\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\r\nimport {\r\n\tBlob,\r\n\tFile,\r\n\tfileFromSync,\r\n\tfileFrom,\r\n\tblobFromSync,\r\n\tblobFrom\r\n} from 'fetch-blob/from.js';\r\n\r\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\r\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\r\n\r\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\r\n\r\n/**\r\n * Fetch function\r\n *\r\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\r\n * @param   {*} [options_] - Fetch options\r\n * @return  {Promise<import('./response').default>}\r\n */\r\nexport default async function fetch(url, options_) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// Build request object\r\n\t\tconst request = new Request(url, options_);\r\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\r\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\r\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\r\n\t\t}\r\n\r\n\t\tif (parsedURL.protocol === 'data:') {\r\n\t\t\tconst data = dataUriToBuffer(request.url);\r\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\r\n\t\t\tresolve(response);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Wrap http.request into fetch\r\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\r\n\t\tconst {signal} = request;\r\n\t\tlet response = null;\r\n\r\n\t\tconst abort = () => {\r\n\t\t\tconst error = new AbortError('The operation was aborted.');\r\n\t\t\treject(error);\r\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\r\n\t\t\t\trequest.body.destroy(error);\r\n\t\t\t}\r\n\r\n\t\t\tif (!response || !response.body) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tresponse.body.emit('error', error);\r\n\t\t};\r\n\r\n\t\tif (signal && signal.aborted) {\r\n\t\t\tabort();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst abortAndFinalize = () => {\r\n\t\t\tabort();\r\n\t\t\tfinalize();\r\n\t\t};\r\n\r\n\t\t// Send request\r\n\t\tconst request_ = send(parsedURL.toString(), options);\r\n\r\n\t\tif (signal) {\r\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\r\n\t\t}\r\n\r\n\t\tconst finalize = () => {\r\n\t\t\trequest_.abort();\r\n\t\t\tif (signal) {\r\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\trequest_.on('error', error => {\r\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\r\n\t\t\tfinalize();\r\n\t\t});\r\n\r\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\r\n\t\t\tif (response && response.body) {\r\n\t\t\t\tresponse.body.destroy(error);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/* c8 ignore next 18 */\r\n\t\tif (process.version < 'v14') {\r\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\r\n\t\t\t// properly handle when the socket close/end events are out of order.\r\n\t\t\trequest_.on('socket', s => {\r\n\t\t\t\tlet endedWithEventsCount;\r\n\t\t\t\ts.prependListener('end', () => {\r\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\r\n\t\t\t\t});\r\n\t\t\t\ts.prependListener('close', hadError => {\r\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\r\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\r\n\t\t\t\t\t\tconst error = new Error('Premature close');\r\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\r\n\t\t\t\t\t\tresponse.body.emit('error', error);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\trequest_.on('response', response_ => {\r\n\t\t\trequest_.setTimeout(0);\r\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\r\n\r\n\t\t\t// HTTP fetch step 5\r\n\t\t\tif (isRedirect(response_.statusCode)) {\r\n\t\t\t\t// HTTP fetch step 5.2\r\n\t\t\t\tconst location = headers.get('Location');\r\n\r\n\t\t\t\t// HTTP fetch step 5.3\r\n\t\t\t\tlet locationURL = null;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\r\n\t\t\t\t} catch {\r\n\t\t\t\t\t// error here can only be invalid URL in Location: header\r\n\t\t\t\t\t// do not throw when options.redirect == manual\r\n\t\t\t\t\t// let the user extract the errorneous redirect URL\r\n\t\t\t\t\tif (request.redirect !== 'manual') {\r\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\r\n\t\t\t\t\t\tfinalize();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// HTTP fetch step 5.5\r\n\t\t\t\tswitch (request.redirect) {\r\n\t\t\t\t\tcase 'error':\r\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\r\n\t\t\t\t\t\tfinalize();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\tcase 'manual':\r\n\t\t\t\t\t\t// Nothing to do\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'follow': {\r\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\r\n\t\t\t\t\t\tif (locationURL === null) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\r\n\t\t\t\t\t\tif (request.counter >= request.follow) {\r\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\r\n\t\t\t\t\t\t\tfinalize();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\r\n\t\t\t\t\t\t// Create a new Request object.\r\n\t\t\t\t\t\tconst requestOptions = {\r\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\r\n\t\t\t\t\t\t\tfollow: request.follow,\r\n\t\t\t\t\t\t\tcounter: request.counter + 1,\r\n\t\t\t\t\t\t\tagent: request.agent,\r\n\t\t\t\t\t\t\tcompress: request.compress,\r\n\t\t\t\t\t\t\tmethod: request.method,\r\n\t\t\t\t\t\t\tbody: clone(request),\r\n\t\t\t\t\t\t\tsignal: request.signal,\r\n\t\t\t\t\t\t\tsize: request.size,\r\n\t\t\t\t\t\t\treferrer: request.referrer,\r\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\r\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\r\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\r\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\r\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\r\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\r\n\t\t\t\t\t\t// headers will also be ignored when following a redirect to a domain using\r\n\t\t\t\t\t\t// a different protocol. For example, a redirect from \"https://foo.com\" to \"http://foo.com\"\r\n\t\t\t\t\t\t// will not forward the sensitive headers\r\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\r\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\r\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\r\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\r\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\r\n\t\t\t\t\t\t\tfinalize();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\r\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\r\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\r\n\t\t\t\t\t\t\trequestOptions.body = undefined;\r\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\r\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\r\n\t\t\t\t\t\tif (responseReferrerPolicy) {\r\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\r\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\r\n\t\t\t\t\t\tfinalize();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare response\r\n\t\t\tif (signal) {\r\n\t\t\t\tresponse_.once('end', () => {\r\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\treject(error);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// see https://github.com/nodejs/node/pull/29376\r\n\t\t\t/* c8 ignore next 3 */\r\n\t\t\tif (process.version < 'v12.10') {\r\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\r\n\t\t\t}\r\n\r\n\t\t\tconst responseOptions = {\r\n\t\t\t\turl: request.url,\r\n\t\t\t\tstatus: response_.statusCode,\r\n\t\t\t\tstatusText: response_.statusMessage,\r\n\t\t\t\theaders,\r\n\t\t\t\tsize: request.size,\r\n\t\t\t\tcounter: request.counter,\r\n\t\t\t\thighWaterMark: request.highWaterMark\r\n\t\t\t};\r\n\r\n\t\t\t// HTTP-network fetch step 12.1.1.3\r\n\t\t\tconst codings = headers.get('Content-Encoding');\r\n\r\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\r\n\r\n\t\t\t// in following scenarios we ignore compression support\r\n\t\t\t// 1. compression support is disabled\r\n\t\t\t// 2. HEAD request\r\n\t\t\t// 3. no Content-Encoding header\r\n\t\t\t// 4. no content response (204)\r\n\t\t\t// 5. content not modified response (304)\r\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\r\n\t\t\t\tresponse = new Response(body, responseOptions);\r\n\t\t\t\tresolve(response);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// For Node v6+\r\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\r\n\t\t\t// servers send slightly invalid responses that are still accepted\r\n\t\t\t// by common browsers.\r\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\r\n\t\t\tconst zlibOptions = {\r\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\r\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\r\n\t\t\t};\r\n\r\n\t\t\t// For gzip\r\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\r\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresponse = new Response(body, responseOptions);\r\n\t\t\t\tresolve(response);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// For deflate\r\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\r\n\t\t\t\t// Handle the infamous raw deflate response from old servers\r\n\t\t\t\t// a hack for old IIS and Apache servers\r\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\traw.once('data', chunk => {\r\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\r\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\r\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\r\n\t\t\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresponse = new Response(body, responseOptions);\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t});\r\n\t\t\t\traw.once('end', () => {\r\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\r\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\r\n\t\t\t\t\tif (!response) {\r\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\r\n\t\t\t\t\t\tresolve(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// For br\r\n\t\t\tif (codings === 'br') {\r\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresponse = new Response(body, responseOptions);\r\n\t\t\t\tresolve(response);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, use response as-is\r\n\t\t\tresponse = new Response(body, responseOptions);\r\n\t\t\tresolve(response);\r\n\t\t});\r\n\r\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\r\n\t\twriteToStream(request_, request).catch(reject);\r\n\t});\r\n}\r\n\r\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\r\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\r\n\r\n\tlet isChunkedTransfer = false;\r\n\tlet properLastChunkReceived = false;\r\n\tlet previousChunk;\r\n\r\n\trequest.on('response', response => {\r\n\t\tconst {headers} = response;\r\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\r\n\t});\r\n\r\n\trequest.on('socket', socket => {\r\n\t\tconst onSocketClose = () => {\r\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\r\n\t\t\t\tconst error = new Error('Premature close');\r\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\r\n\t\t\t\terrorCallback(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst onData = buf => {\r\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\r\n\r\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\r\n\t\t\tif (!properLastChunkReceived && previousChunk) {\r\n\t\t\t\tproperLastChunkReceived = (\r\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\r\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tpreviousChunk = buf;\r\n\t\t};\r\n\r\n\t\tsocket.prependListener('close', onSocketClose);\r\n\t\tsocket.on('data', onData);\r\n\r\n\t\trequest.on('close', () => {\r\n\t\t\tsocket.removeListener('close', onSocketClose);\r\n\t\t\tsocket.removeListener('data', onData);\r\n\t\t});\r\n\t});\r\n}\r\n", "export interface MimeBuffer extends Buffer {\r\n\ttype: string;\r\n\ttypeFull: string;\r\n\tcharset: string;\r\n}\r\n\r\n/**\r\n * Returns a `Buffer` instance from the given data URI `uri`.\r\n *\r\n * @param {String} uri Data URI to turn into a Buffer instance\r\n * @returns {Buffer} Buffer instance from Data URI\r\n * @api public\r\n */\r\nexport function dataUriToBuffer(uri: string): MimeBuffer {\r\n\tif (!/^data:/i.test(uri)) {\r\n\t\tthrow new TypeError(\r\n\t\t\t'`uri` does not appear to be a Data URI (must begin with \"data:\")'\r\n\t\t);\r\n\t}\r\n\r\n\t// strip newlines\r\n\turi = uri.replace(/\\r?\\n/g, '');\r\n\r\n\t// split the URI up into the \"metadata\" and the \"data\" portions\r\n\tconst firstComma = uri.indexOf(',');\r\n\tif (firstComma === -1 || firstComma <= 4) {\r\n\t\tthrow new TypeError('malformed data: URI');\r\n\t}\r\n\r\n\t// remove the \"data:\" scheme and parse the metadata\r\n\tconst meta = uri.substring(5, firstComma).split(';');\r\n\r\n\tlet charset = '';\r\n\tlet base64 = false;\r\n\tconst type = meta[0] || 'text/plain';\r\n\tlet typeFull = type;\r\n\tfor (let i = 1; i < meta.length; i++) {\r\n\t\tif (meta[i] === 'base64') {\r\n\t\t\tbase64 = true;\r\n\t\t} else if(meta[i]) {\r\n\t\t\ttypeFull += `;${  meta[i]}`;\r\n\t\t\tif (meta[i].indexOf('charset=') === 0) {\r\n\t\t\t\tcharset = meta[i].substring(8);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// defaults to US-ASCII only if type is not provided\r\n\tif (!meta[0] && !charset.length) {\r\n\t\ttypeFull += ';charset=US-ASCII';\r\n\t\tcharset = 'US-ASCII';\r\n\t}\r\n\r\n\t// get the encoded data portion and decode URI-encoded chars\r\n\tconst encoding = base64 ? 'base64' : 'ascii';\r\n\tconst data = unescape(uri.substring(firstComma + 1));\r\n\tconst buffer = Buffer.from(data, encoding) as MimeBuffer;\r\n\r\n\t// set `.type` and `.typeFull` properties to MIME type\r\n\tbuffer.type = type;\r\n\tbuffer.typeFull = typeFull;\r\n\r\n\t// set the `.charset` property\r\n\tbuffer.charset = charset;\r\n\r\n\treturn buffer;\r\n}\r\n\r\nexport default dataUriToBuffer;\r\n", "\r\n/**\r\n * Body.js\r\n *\r\n * Body interface provides common methods for Request and Response\r\n */\r\n\r\nimport Stream, {PassThrough} from 'node:stream';\r\nimport {types, deprecate, promisify} from 'node:util';\r\nimport {Buffer} from 'node:buffer';\r\n\r\nimport Blob from 'fetch-blob';\r\nimport {FormData, formDataToBlob} from 'formdata-polyfill/esm.min.js';\r\n\r\nimport {FetchError} from './errors/fetch-error.js';\r\nimport {FetchBaseError} from './errors/base.js';\r\nimport {isBlob, isURLSearchParameters} from './utils/is.js';\r\n\r\nconst pipeline = promisify(Stream.pipeline);\r\nconst INTERNALS = Symbol('Body internals');\r\n\r\n/**\r\n * Body mixin\r\n *\r\n * Ref: https://fetch.spec.whatwg.org/#body\r\n *\r\n * @param   Stream  body  Readable stream\r\n * @param   Object  opts  Response options\r\n * @return  Void\r\n */\r\nexport default class Body {\r\n\tconstructor(body, {\r\n\t\tsize = 0\r\n\t} = {}) {\r\n\t\tlet boundary = null;\r\n\r\n\t\tif (body === null) {\r\n\t\t\t// Body is undefined or null\r\n\t\t\tbody = null;\r\n\t\t} else if (isURLSearchParameters(body)) {\r\n\t\t\t// Body is a URLSearchParams\r\n\t\t\tbody = Buffer.from(body.toString());\r\n\t\t} else if (isBlob(body)) {\r\n\t\t\t// Body is blob\r\n\t\t} else if (Buffer.isBuffer(body)) {\r\n\t\t\t// Body is Buffer\r\n\t\t} else if (types.isAnyArrayBuffer(body)) {\r\n\t\t\t// Body is ArrayBuffer\r\n\t\t\tbody = Buffer.from(body);\r\n\t\t} else if (ArrayBuffer.isView(body)) {\r\n\t\t\t// Body is ArrayBufferView\r\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\r\n\t\t} else if (body instanceof Stream) {\r\n\t\t\t// Body is stream\r\n\t\t} else if (body instanceof FormData) {\r\n\t\t\t// Body is FormData\r\n\t\t\tbody = formDataToBlob(body);\r\n\t\t\tboundary = body.type.split('=')[1];\r\n\t\t} else {\r\n\t\t\t// None of the above\r\n\t\t\t// coerce to string then buffer\r\n\t\t\tbody = Buffer.from(String(body));\r\n\t\t}\r\n\r\n\t\tlet stream = body;\r\n\r\n\t\tif (Buffer.isBuffer(body)) {\r\n\t\t\tstream = Stream.Readable.from(body);\r\n\t\t} else if (isBlob(body)) {\r\n\t\t\tstream = Stream.Readable.from(body.stream());\r\n\t\t}\r\n\r\n\t\tthis[INTERNALS] = {\r\n\t\t\tbody,\r\n\t\t\tstream,\r\n\t\t\tboundary,\r\n\t\t\tdisturbed: false,\r\n\t\t\terror: null\r\n\t\t};\r\n\t\tthis.size = size;\r\n\r\n\t\tif (body instanceof Stream) {\r\n\t\t\tbody.on('error', error_ => {\r\n\t\t\t\tconst error = error_ instanceof FetchBaseError ?\r\n\t\t\t\t\terror_ :\r\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${error_.message}`, 'system', error_);\r\n\t\t\t\tthis[INTERNALS].error = error;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn this[INTERNALS].stream;\r\n\t}\r\n\r\n\tget bodyUsed() {\r\n\t\treturn this[INTERNALS].disturbed;\r\n\t}\r\n\r\n\t/**\r\n\t * Decode response as ArrayBuffer\r\n\t *\r\n\t * @return  Promise\r\n\t */\r\n\tasync arrayBuffer() {\r\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\r\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\r\n\t}\r\n\r\n\tasync formData() {\r\n\t\tconst ct = this.headers.get('content-type');\r\n\r\n\t\tif (ct.startsWith('application/x-www-form-urlencoded')) {\r\n\t\t\tconst formData = new FormData();\r\n\t\t\tconst parameters = new URLSearchParams(await this.text());\r\n\r\n\t\t\tfor (const [name, value] of parameters) {\r\n\t\t\t\tformData.append(name, value);\r\n\t\t\t}\r\n\r\n\t\t\treturn formData;\r\n\t\t}\r\n\r\n\t\tconst {toFormData} = await import('./utils/multipart-parser.js');\r\n\t\treturn toFormData(this.body, ct);\r\n\t}\r\n\r\n\t/**\r\n\t * Return raw response as Blob\r\n\t *\r\n\t * @return Promise\r\n\t */\r\n\tasync blob() {\r\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\r\n\t\tconst buf = await this.arrayBuffer();\r\n\r\n\t\treturn new Blob([buf], {\r\n\t\t\ttype: ct\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Decode response as json\r\n\t *\r\n\t * @return  Promise\r\n\t */\r\n\tasync json() {\r\n\t\tconst text = await this.text();\r\n\t\treturn JSON.parse(text);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode response as text\r\n\t *\r\n\t * @return  Promise\r\n\t */\r\n\tasync text() {\r\n\t\tconst buffer = await consumeBody(this);\r\n\t\treturn new TextDecoder().decode(buffer);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode response as buffer (non-spec api)\r\n\t *\r\n\t * @return  Promise\r\n\t */\r\n\tbuffer() {\r\n\t\treturn consumeBody(this);\r\n\t}\r\n}\r\n\r\nBody.prototype.buffer = deprecate(Body.prototype.buffer, 'Please use \\'response.arrayBuffer()\\' instead of \\'response.buffer()\\'', 'node-fetch#buffer');\r\n\r\n// In browsers, all properties are enumerable.\r\nObject.defineProperties(Body.prototype, {\r\n\tbody: {enumerable: true},\r\n\tbodyUsed: {enumerable: true},\r\n\tarrayBuffer: {enumerable: true},\r\n\tblob: {enumerable: true},\r\n\tjson: {enumerable: true},\r\n\ttext: {enumerable: true},\r\n\tdata: {get: deprecate(() => {},\r\n\t\t'data doesn\\'t exist, use json(), text(), arrayBuffer(), or body instead',\r\n\t\t'https://github.com/node-fetch/node-fetch/issues/1000 (response)')}\r\n});\r\n\r\n/**\r\n * Consume and convert an entire Body to a Buffer.\r\n *\r\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\r\n *\r\n * @return Promise\r\n */\r\nasync function consumeBody(data) {\r\n\tif (data[INTERNALS].disturbed) {\r\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\r\n\t}\r\n\r\n\tdata[INTERNALS].disturbed = true;\r\n\r\n\tif (data[INTERNALS].error) {\r\n\t\tthrow data[INTERNALS].error;\r\n\t}\r\n\r\n\tconst {body} = data;\r\n\r\n\t// Body is null\r\n\tif (body === null) {\r\n\t\treturn Buffer.alloc(0);\r\n\t}\r\n\r\n\t/* c8 ignore next 3 */\r\n\tif (!(body instanceof Stream)) {\r\n\t\treturn Buffer.alloc(0);\r\n\t}\r\n\r\n\t// Body is stream\r\n\t// get ready to actually consume the body\r\n\tconst accum = [];\r\n\tlet accumBytes = 0;\r\n\r\n\ttry {\r\n\t\tfor await (const chunk of body) {\r\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\r\n\t\t\t\tconst error = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\r\n\t\t\t\tbody.destroy(error);\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\r\n\t\t\taccumBytes += chunk.length;\r\n\t\t\taccum.push(chunk);\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconst error_ = error instanceof FetchBaseError ? error : new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\r\n\t\tthrow error_;\r\n\t}\r\n\r\n\tif (body.readableEnded === true || body._readableState.ended === true) {\r\n\t\ttry {\r\n\t\t\tif (accum.every(c => typeof c === 'string')) {\r\n\t\t\t\treturn Buffer.from(accum.join(''));\r\n\t\t\t}\r\n\r\n\t\t\treturn Buffer.concat(accum, accumBytes);\r\n\t\t} catch (error) {\r\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\r\n\t}\r\n}\r\n\r\n/**\r\n * Clone body given Res/Req instance\r\n *\r\n * @param   Mixed   instance       Response or Request instance\r\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\r\n * @return  Mixed\r\n */\r\nexport const clone = (instance, highWaterMark) => {\r\n\tlet p1;\r\n\tlet p2;\r\n\tlet {body} = instance[INTERNALS];\r\n\r\n\t// Don't allow cloning a used body\r\n\tif (instance.bodyUsed) {\r\n\t\tthrow new Error('cannot clone body after it is used');\r\n\t}\r\n\r\n\t// Check that body is a stream and not form-data object\r\n\t// note: we can't clone the form-data object without having it as a dependency\r\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\r\n\t\t// Tee instance body\r\n\t\tp1 = new PassThrough({highWaterMark});\r\n\t\tp2 = new PassThrough({highWaterMark});\r\n\t\tbody.pipe(p1);\r\n\t\tbody.pipe(p2);\r\n\t\t// Set instance body to teed body and return the other teed body\r\n\t\tinstance[INTERNALS].stream = p1;\r\n\t\tbody = p2;\r\n\t}\r\n\r\n\treturn body;\r\n};\r\n\r\nconst getNonSpecFormDataBoundary = deprecate(\r\n\tbody => body.getBoundary(),\r\n\t'form-data doesn\\'t follow the spec and requires special treatment. Use alternative package',\r\n\t'https://github.com/node-fetch/node-fetch/issues/1167'\r\n);\r\n\r\n/**\r\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\r\n * specified in the specification:\r\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\r\n *\r\n * This function assumes that instance.body is present.\r\n *\r\n * @param {any} body Any options.body input\r\n * @returns {string | null}\r\n */\r\nexport const extractContentType = (body, request) => {\r\n\t// Body is null or undefined\r\n\tif (body === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Body is string\r\n\tif (typeof body === 'string') {\r\n\t\treturn 'text/plain;charset=UTF-8';\r\n\t}\r\n\r\n\t// Body is a URLSearchParams\r\n\tif (isURLSearchParameters(body)) {\r\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\r\n\t}\r\n\r\n\t// Body is blob\r\n\tif (isBlob(body)) {\r\n\t\treturn body.type || null;\r\n\t}\r\n\r\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\r\n\tif (Buffer.isBuffer(body) || types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif (body instanceof FormData) {\r\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\r\n\t}\r\n\r\n\t// Detect form data input from form-data module\r\n\tif (body && typeof body.getBoundary === 'function') {\r\n\t\treturn `multipart/form-data;boundary=${getNonSpecFormDataBoundary(body)}`;\r\n\t}\r\n\r\n\t// Body is stream - can't really do much about this\r\n\tif (body instanceof Stream) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Body constructor defaults other things to string\r\n\treturn 'text/plain;charset=UTF-8';\r\n};\r\n\r\n/**\r\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\r\n * For us, we have to explicitly get it with a function.\r\n *\r\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\r\n *\r\n * @param {any} obj.body Body object from the Body instance.\r\n * @returns {number | null}\r\n */\r\nexport const getTotalBytes = request => {\r\n\tconst {body} = request[INTERNALS];\r\n\r\n\t// Body is null or undefined\r\n\tif (body === null) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t// Body is Blob\r\n\tif (isBlob(body)) {\r\n\t\treturn body.size;\r\n\t}\r\n\r\n\t// Body is Buffer\r\n\tif (Buffer.isBuffer(body)) {\r\n\t\treturn body.length;\r\n\t}\r\n\r\n\t// Detect form data input from form-data module\r\n\tif (body && typeof body.getLengthSync === 'function') {\r\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\r\n\t}\r\n\r\n\t// Body is stream\r\n\treturn null;\r\n};\r\n\r\n/**\r\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\r\n *\r\n * @param {Stream.Writable} dest The stream to write to.\r\n * @param obj.body Body object from the Body instance.\r\n * @returns {Promise<void>}\r\n */\r\nexport const writeToStream = async (dest, {body}) => {\r\n\tif (body === null) {\r\n\t\t// Body is null\r\n\t\tdest.end();\r\n\t} else {\r\n\t\t// Body is stream\r\n\t\tawait pipeline(body, dest);\r\n\t}\r\n};\r\n", "export class FetchBaseError extends Error {\r\n\tconstructor(message, type) {\r\n\t\tsuper(message);\r\n\t\t// Hide custom error implementation details from end-users\r\n\t\tError.captureStackTrace(this, this.constructor);\r\n\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\tget [Symbol.toStringTag]() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n}\r\n", "\r\nimport {FetchBaseError} from './base.js';\r\n\r\n/**\r\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\r\n*/\r\n\r\n/**\r\n * FetchError interface for operational errors\r\n */\r\nexport class FetchError extends FetchBaseError {\r\n\t/**\r\n\t * @param  {string} message -      Error message for human\r\n\t * @param  {string} [type] -        Error type for machine\r\n\t * @param  {SystemError} [systemError] - For Node.js system error\r\n\t */\r\n\tconstructor(message, type, systemError) {\r\n\t\tsuper(message, type);\r\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\r\n\t\tif (systemError) {\r\n\t\t\t// eslint-disable-next-line no-multi-assign\r\n\t\t\tthis.code = this.errno = systemError.code;\r\n\t\t\tthis.erroredSysCall = systemError.syscall;\r\n\t\t}\r\n\t}\r\n}\r\n", "/**\r\n * Is.js\r\n *\r\n * Object type checks.\r\n */\r\n\r\nconst NAME = Symbol.toStringTag;\r\n\r\n/**\r\n * Check if `obj` is a URLSearchParams object\r\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\r\n * @param {*} object - Object to check for\r\n * @return {boolean}\r\n */\r\nexport const isURLSearchParameters = object => {\r\n\treturn (\r\n\t\ttypeof object === 'object' &&\r\n\t\ttypeof object.append === 'function' &&\r\n\t\ttypeof object.delete === 'function' &&\r\n\t\ttypeof object.get === 'function' &&\r\n\t\ttypeof object.getAll === 'function' &&\r\n\t\ttypeof object.has === 'function' &&\r\n\t\ttypeof object.set === 'function' &&\r\n\t\ttypeof object.sort === 'function' &&\r\n\t\tobject[NAME] === 'URLSearchParams'\r\n\t);\r\n};\r\n\r\n/**\r\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\r\n * @param {*} object - Object to check for\r\n * @return {boolean}\r\n */\r\nexport const isBlob = object => {\r\n\treturn (\r\n\t\tobject &&\r\n\t\ttypeof object === 'object' &&\r\n\t\ttypeof object.arrayBuffer === 'function' &&\r\n\t\ttypeof object.type === 'string' &&\r\n\t\ttypeof object.stream === 'function' &&\r\n\t\ttypeof object.constructor === 'function' &&\r\n\t\t/^(Blob|File)$/.test(object[NAME])\r\n\t);\r\n};\r\n\r\n/**\r\n * Check if `obj` is an instance of AbortSignal.\r\n * @param {*} object - Object to check for\r\n * @return {boolean}\r\n */\r\nexport const isAbortSignal = object => {\r\n\treturn (\r\n\t\ttypeof object === 'object' && (\r\n\t\t\tobject[NAME] === 'AbortSignal' ||\r\n\t\t\tobject[NAME] === 'EventTarget'\r\n\t\t)\r\n\t);\r\n};\r\n\r\n/**\r\n * isDomainOrSubdomain reports whether sub is a subdomain (or exact match) of\r\n * the parent domain.\r\n *\r\n * Both domains must already be in canonical form.\r\n * @param {string|URL} original\r\n * @param {string|URL} destination\r\n */\r\nexport const isDomainOrSubdomain = (destination, original) => {\r\n\tconst orig = new URL(original).hostname;\r\n\tconst dest = new URL(destination).hostname;\r\n\r\n\treturn orig === dest || orig.endsWith(`.${dest}`);\r\n};\r\n\r\n/**\r\n * isSameProtocol reports whether the two provided URLs use the same protocol.\r\n *\r\n * Both domains must already be in canonical form.\r\n * @param {string|URL} original\r\n * @param {string|URL} destination\r\n */\r\nexport const isSameProtocol = (destination, original) => {\r\n\tconst orig = new URL(original).protocol;\r\n\tconst dest = new URL(destination).protocol;\r\n\r\n\treturn orig === dest;\r\n};\r\n", "/**\r\n * Headers.js\r\n *\r\n * Headers class offers convenient helpers\r\n */\r\n\r\nimport {types} from 'node:util';\r\nimport http from 'node:http';\r\n\r\n/* c8 ignore next 9 */\r\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\r\n\thttp.validateHeaderName :\r\n\tname => {\r\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\r\n\t\t\tconst error = new TypeError(`Header name must be a valid HTTP token [${name}]`);\r\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n/* c8 ignore next 9 */\r\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\r\n\thttp.validateHeaderValue :\r\n\t(name, value) => {\r\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\r\n\t\t\tconst error = new TypeError(`Invalid character in header content [\"${name}\"]`);\r\n\t\t\tObject.defineProperty(error, 'code', {value: 'ERR_INVALID_CHAR'});\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n/**\r\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\r\n */\r\n\r\n/**\r\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\r\n * These actions include retrieving, setting, adding to, and removing.\r\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\r\n * You can add to this using methods like append() (see Examples.)\r\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\r\n *\r\n */\r\nexport default class Headers extends URLSearchParams {\r\n\t/**\r\n\t * Headers class\r\n\t *\r\n\t * @constructor\r\n\t * @param {HeadersInit} [init] - Response headers\r\n\t */\r\n\tconstructor(init) {\r\n\t\t// Validate and normalize init object in [name, value(s)][]\r\n\t\t/** @type {string[][]} */\r\n\t\tlet result = [];\r\n\t\tif (init instanceof Headers) {\r\n\t\t\tconst raw = init.raw();\r\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\r\n\t\t\t\tresult.push(...values.map(value => [name, value]));\r\n\t\t\t}\r\n\t\t} else if (init == null) { // eslint-disable-line no-eq-null, eqeqeq\r\n\t\t\t// No op\r\n\t\t} else if (typeof init === 'object' && !types.isBoxedPrimitive(init)) {\r\n\t\t\tconst method = init[Symbol.iterator];\r\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\r\n\t\t\tif (method == null) {\r\n\t\t\t\t// Record<ByteString, ByteString>\r\n\t\t\t\tresult.push(...Object.entries(init));\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof method !== 'function') {\r\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Sequence<sequence<ByteString>>\r\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\r\n\t\t\t\tresult = [...init]\r\n\t\t\t\t\t.map(pair => {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\ttypeof pair !== 'object' || types.isBoxedPrimitive(pair)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn [...pair];\r\n\t\t\t\t\t}).map(pair => {\r\n\t\t\t\t\t\tif (pair.length !== 2) {\r\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn [...pair];\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\r\n\t\t}\r\n\r\n\t\t// Validate and lowercase\r\n\t\tresult =\r\n\t\t\tresult.length > 0 ?\r\n\t\t\t\tresult.map(([name, value]) => {\r\n\t\t\t\t\tvalidateHeaderName(name);\r\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\r\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\r\n\t\t\t\t}) :\r\n\t\t\t\tundefined;\r\n\r\n\t\tsuper(result);\r\n\r\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\r\n\t\t// eslint-disable-next-line no-constructor-return\r\n\t\treturn new Proxy(this, {\r\n\t\t\tget(target, p, receiver) {\r\n\t\t\t\tswitch (p) {\r\n\t\t\t\t\tcase 'append':\r\n\t\t\t\t\tcase 'set':\r\n\t\t\t\t\t\treturn (name, value) => {\r\n\t\t\t\t\t\t\tvalidateHeaderName(name);\r\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\r\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\r\n\t\t\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\r\n\t\t\t\t\t\t\t\tString(value)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tcase 'delete':\r\n\t\t\t\t\tcase 'has':\r\n\t\t\t\t\tcase 'getAll':\r\n\t\t\t\t\t\treturn name => {\r\n\t\t\t\t\t\t\tvalidateHeaderName(name);\r\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\r\n\t\t\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tcase 'keys':\r\n\t\t\t\t\t\treturn () => {\r\n\t\t\t\t\t\t\ttarget.sort();\r\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t/* c8 ignore next */\r\n\t}\r\n\r\n\tget [Symbol.toStringTag]() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn Object.prototype.toString.call(this);\r\n\t}\r\n\r\n\tget(name) {\r\n\t\tconst values = this.getAll(name);\r\n\t\tif (values.length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet value = values.join(', ');\r\n\t\tif (/^content-encoding$/i.test(name)) {\r\n\t\t\tvalue = value.toLowerCase();\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tforEach(callback, thisArg = undefined) {\r\n\t\tfor (const name of this.keys()) {\r\n\t\t\tReflect.apply(callback, thisArg, [this.get(name), name, this]);\r\n\t\t}\r\n\t}\r\n\r\n\t* values() {\r\n\t\tfor (const name of this.keys()) {\r\n\t\t\tyield this.get(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @type {() => IterableIterator<[string, string]>}\r\n\t */\r\n\t* entries() {\r\n\t\tfor (const name of this.keys()) {\r\n\t\t\tyield [name, this.get(name)];\r\n\t\t}\r\n\t}\r\n\r\n\t[Symbol.iterator]() {\r\n\t\treturn this.entries();\r\n\t}\r\n\r\n\t/**\r\n\t * Node-fetch non-spec method\r\n\t * returning all headers and their values as array\r\n\t * @returns {Record<string, string[]>}\r\n\t */\r\n\traw() {\r\n\t\treturn [...this.keys()].reduce((result, key) => {\r\n\t\t\tresult[key] = this.getAll(key);\r\n\t\t\treturn result;\r\n\t\t}, {});\r\n\t}\r\n\r\n\t/**\r\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\r\n\t */\r\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\r\n\t\treturn [...this.keys()].reduce((result, key) => {\r\n\t\t\tconst values = this.getAll(key);\r\n\t\t\t// Http.request() only supports string as Host header.\r\n\t\t\t// This hack makes specifying custom Host header possible.\r\n\t\t\tif (key === 'host') {\r\n\t\t\t\tresult[key] = values[0];\r\n\t\t\t} else {\r\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}, {});\r\n\t}\r\n}\r\n\r\n/**\r\n * Re-shaping object for Web IDL tests\r\n * Only need to do it for overridden methods\r\n */\r\nObject.defineProperties(\r\n\tHeaders.prototype,\r\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\r\n\t\tresult[property] = {enumerable: true};\r\n\t\treturn result;\r\n\t}, {})\r\n);\r\n\r\n/**\r\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\r\n * not conform to HTTP grammar productions.\r\n * @param {import('http').IncomingMessage['rawHeaders']} headers\r\n */\r\nexport function fromRawHeaders(headers = []) {\r\n\treturn new Headers(\r\n\t\theaders\r\n\t\t\t// Split into pairs\r\n\t\t\t.reduce((result, value, index, array) => {\r\n\t\t\t\tif (index % 2 === 0) {\r\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}, [])\r\n\t\t\t.filter(([name, value]) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvalidateHeaderName(name);\r\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} catch {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t);\r\n}\r\n", "const redirectStatus = new Set([301, 302, 303, 307, 308]);\r\n\r\n/**\r\n * Redirect code matching\r\n *\r\n * @param {number} code - Status code\r\n * @return {boolean}\r\n */\r\nexport const isRedirect = code => {\r\n\treturn redirectStatus.has(code);\r\n};\r\n", "/**\r\n * Response.js\r\n *\r\n * Response class provides content decoding\r\n */\r\n\r\nimport Headers from './headers.js';\r\nimport Body, {clone, extractContentType} from './body.js';\r\nimport {isRedirect} from './utils/is-redirect.js';\r\n\r\nconst INTERNALS = Symbol('Response internals');\r\n\r\n/**\r\n * Response class\r\n *\r\n * Ref: https://fetch.spec.whatwg.org/#response-class\r\n *\r\n * @param   Stream  body  Readable stream\r\n * @param   Object  opts  Response options\r\n * @return  Void\r\n */\r\nexport default class Response extends Body {\r\n\tconstructor(body = null, options = {}) {\r\n\t\tsuper(body, options);\r\n\r\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq, no-negated-condition\r\n\t\tconst status = options.status != null ? options.status : 200;\r\n\r\n\t\tconst headers = new Headers(options.headers);\r\n\r\n\t\tif (body !== null && !headers.has('Content-Type')) {\r\n\t\t\tconst contentType = extractContentType(body, this);\r\n\t\t\tif (contentType) {\r\n\t\t\t\theaders.append('Content-Type', contentType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis[INTERNALS] = {\r\n\t\t\ttype: 'default',\r\n\t\t\turl: options.url,\r\n\t\t\tstatus,\r\n\t\t\tstatusText: options.statusText || '',\r\n\t\t\theaders,\r\n\t\t\tcounter: options.counter,\r\n\t\t\thighWaterMark: options.highWaterMark\r\n\t\t};\r\n\t}\r\n\r\n\tget type() {\r\n\t\treturn this[INTERNALS].type;\r\n\t}\r\n\r\n\tget url() {\r\n\t\treturn this[INTERNALS].url || '';\r\n\t}\r\n\r\n\tget status() {\r\n\t\treturn this[INTERNALS].status;\r\n\t}\r\n\r\n\t/**\r\n\t * Convenience property representing if the request ended normally\r\n\t */\r\n\tget ok() {\r\n\t\treturn this[INTERNALS].status >= 200 && this[INTERNALS].status < 300;\r\n\t}\r\n\r\n\tget redirected() {\r\n\t\treturn this[INTERNALS].counter > 0;\r\n\t}\r\n\r\n\tget statusText() {\r\n\t\treturn this[INTERNALS].statusText;\r\n\t}\r\n\r\n\tget headers() {\r\n\t\treturn this[INTERNALS].headers;\r\n\t}\r\n\r\n\tget highWaterMark() {\r\n\t\treturn this[INTERNALS].highWaterMark;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone this response\r\n\t *\r\n\t * @return  Response\r\n\t */\r\n\tclone() {\r\n\t\treturn new Response(clone(this, this.highWaterMark), {\r\n\t\t\ttype: this.type,\r\n\t\t\turl: this.url,\r\n\t\t\tstatus: this.status,\r\n\t\t\tstatusText: this.statusText,\r\n\t\t\theaders: this.headers,\r\n\t\t\tok: this.ok,\r\n\t\t\tredirected: this.redirected,\r\n\t\t\tsize: this.size,\r\n\t\t\thighWaterMark: this.highWaterMark\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @param {string} url    The URL that the new response is to originate from.\r\n\t * @param {number} status An optional status code for the response (e.g., 302.)\r\n\t * @returns {Response}    A Response object.\r\n\t */\r\n\tstatic redirect(url, status = 302) {\r\n\t\tif (!isRedirect(status)) {\r\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\r\n\t\t}\r\n\r\n\t\treturn new Response(null, {\r\n\t\t\theaders: {\r\n\t\t\t\tlocation: new URL(url).toString()\r\n\t\t\t},\r\n\t\t\tstatus\r\n\t\t});\r\n\t}\r\n\r\n\tstatic error() {\r\n\t\tconst response = new Response(null, {status: 0, statusText: ''});\r\n\t\tresponse[INTERNALS].type = 'error';\r\n\t\treturn response;\r\n\t}\r\n\r\n\tstatic json(data = undefined, init = {}) {\r\n\t\tconst body = JSON.stringify(data);\r\n\r\n\t\tif (body === undefined) {\r\n\t\t\tthrow new TypeError('data is not JSON serializable');\r\n\t\t}\r\n\r\n\t\tconst headers = new Headers(init && init.headers);\r\n\r\n\t\tif (!headers.has('content-type')) {\r\n\t\t\theaders.set('content-type', 'application/json');\r\n\t\t}\r\n\r\n\t\treturn new Response(body, {\r\n\t\t\t...init,\r\n\t\t\theaders\r\n\t\t});\r\n\t}\r\n\r\n\tget [Symbol.toStringTag]() {\r\n\t\treturn 'Response';\r\n\t}\r\n}\r\n\r\nObject.defineProperties(Response.prototype, {\r\n\ttype: {enumerable: true},\r\n\turl: {enumerable: true},\r\n\tstatus: {enumerable: true},\r\n\tok: {enumerable: true},\r\n\tredirected: {enumerable: true},\r\n\tstatusText: {enumerable: true},\r\n\theaders: {enumerable: true},\r\n\tclone: {enumerable: true}\r\n});\r\n", "/**\r\n * Request.js\r\n *\r\n * Request class contains server only options\r\n *\r\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\r\n */\r\n\r\nimport {format as formatUrl} from 'node:url';\r\nimport {deprecate} from 'node:util';\r\nimport Headers from './headers.js';\r\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\r\nimport {isAbortSignal} from './utils/is.js';\r\nimport {getSearch} from './utils/get-search.js';\r\nimport {\r\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\r\n} from './utils/referrer.js';\r\n\r\nconst INTERNALS = Symbol('Request internals');\r\n\r\n/**\r\n * Check if `obj` is an instance of Request.\r\n *\r\n * @param  {*} object\r\n * @return {boolean}\r\n */\r\nconst isRequest = object => {\r\n\treturn (\r\n\t\ttypeof object === 'object' &&\r\n\t\ttypeof object[INTERNALS] === 'object'\r\n\t);\r\n};\r\n\r\nconst doBadDataWarn = deprecate(() => {},\r\n\t'.data is not a valid RequestInit property, use .body instead',\r\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\r\n\r\n/**\r\n * Request class\r\n *\r\n * Ref: https://fetch.spec.whatwg.org/#request-class\r\n *\r\n * @param   Mixed   input  Url or Request instance\r\n * @param   Object  init   Custom options\r\n * @return  Void\r\n */\r\nexport default class Request extends Body {\r\n\tconstructor(input, init = {}) {\r\n\t\tlet parsedURL;\r\n\r\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\r\n\t\tif (isRequest(input)) {\r\n\t\t\tparsedURL = new URL(input.url);\r\n\t\t} else {\r\n\t\t\tparsedURL = new URL(input);\r\n\t\t\tinput = {};\r\n\t\t}\r\n\r\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\r\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\r\n\t\t}\r\n\r\n\t\tlet method = init.method || input.method || 'GET';\r\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\r\n\t\t\tmethod = method.toUpperCase();\r\n\t\t}\r\n\r\n\t\tif (!isRequest(init) && 'data' in init) {\r\n\t\t\tdoBadDataWarn();\r\n\t\t}\r\n\r\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\r\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\r\n\t\t\t(method === 'GET' || method === 'HEAD')) {\r\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\r\n\t\t}\r\n\r\n\t\tconst inputBody = init.body ?\r\n\t\t\tinit.body :\r\n\t\t\t(isRequest(input) && input.body !== null ?\r\n\t\t\t\tclone(input) :\r\n\t\t\t\tnull);\r\n\r\n\t\tsuper(inputBody, {\r\n\t\t\tsize: init.size || input.size || 0\r\n\t\t});\r\n\r\n\t\tconst headers = new Headers(init.headers || input.headers || {});\r\n\r\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\r\n\t\t\tconst contentType = extractContentType(inputBody, this);\r\n\t\t\tif (contentType) {\r\n\t\t\t\theaders.set('Content-Type', contentType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet signal = isRequest(input) ?\r\n\t\t\tinput.signal :\r\n\t\t\tnull;\r\n\t\tif ('signal' in init) {\r\n\t\t\tsignal = init.signal;\r\n\t\t}\r\n\r\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\r\n\t\tif (signal != null && !isAbortSignal(signal)) {\r\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\r\n\t\t}\r\n\r\n\t\t// §5.4, Request constructor steps, step 15.1\r\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\r\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\r\n\t\tif (referrer === '') {\r\n\t\t\t// §5.4, Request constructor steps, step 15.2\r\n\t\t\treferrer = 'no-referrer';\r\n\t\t} else if (referrer) {\r\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\r\n\t\t\tconst parsedReferrer = new URL(referrer);\r\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\r\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\r\n\t\t} else {\r\n\t\t\treferrer = undefined;\r\n\t\t}\r\n\r\n\t\tthis[INTERNALS] = {\r\n\t\t\tmethod,\r\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\r\n\t\t\theaders,\r\n\t\t\tparsedURL,\r\n\t\t\tsignal,\r\n\t\t\treferrer\r\n\t\t};\r\n\r\n\t\t// Node-fetch-only options\r\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\r\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\r\n\t\tthis.counter = init.counter || input.counter || 0;\r\n\t\tthis.agent = init.agent || input.agent;\r\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\r\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\r\n\r\n\t\t// §5.4, Request constructor steps, step 16.\r\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\r\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\r\n\t}\r\n\r\n\t/** @returns {string} */\r\n\tget method() {\r\n\t\treturn this[INTERNALS].method;\r\n\t}\r\n\r\n\t/** @returns {string} */\r\n\tget url() {\r\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\r\n\t}\r\n\r\n\t/** @returns {Headers} */\r\n\tget headers() {\r\n\t\treturn this[INTERNALS].headers;\r\n\t}\r\n\r\n\tget redirect() {\r\n\t\treturn this[INTERNALS].redirect;\r\n\t}\r\n\r\n\t/** @returns {AbortSignal} */\r\n\tget signal() {\r\n\t\treturn this[INTERNALS].signal;\r\n\t}\r\n\r\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\r\n\tget referrer() {\r\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tif (this[INTERNALS].referrer === 'client') {\r\n\t\t\treturn 'about:client';\r\n\t\t}\r\n\r\n\t\tif (this[INTERNALS].referrer) {\r\n\t\t\treturn this[INTERNALS].referrer.toString();\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tget referrerPolicy() {\r\n\t\treturn this[INTERNALS].referrerPolicy;\r\n\t}\r\n\r\n\tset referrerPolicy(referrerPolicy) {\r\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\r\n\t}\r\n\r\n\t/**\r\n\t * Clone this request\r\n\t *\r\n\t * @return  Request\r\n\t */\r\n\tclone() {\r\n\t\treturn new Request(this);\r\n\t}\r\n\r\n\tget [Symbol.toStringTag]() {\r\n\t\treturn 'Request';\r\n\t}\r\n}\r\n\r\nObject.defineProperties(Request.prototype, {\r\n\tmethod: {enumerable: true},\r\n\turl: {enumerable: true},\r\n\theaders: {enumerable: true},\r\n\tredirect: {enumerable: true},\r\n\tclone: {enumerable: true},\r\n\tsignal: {enumerable: true},\r\n\treferrer: {enumerable: true},\r\n\treferrerPolicy: {enumerable: true}\r\n});\r\n\r\n/**\r\n * Convert a Request to Node.js http request options.\r\n *\r\n * @param {Request} request - A Request instance\r\n * @return The options object to be passed to http.request\r\n */\r\nexport const getNodeRequestOptions = request => {\r\n\tconst {parsedURL} = request[INTERNALS];\r\n\tconst headers = new Headers(request[INTERNALS].headers);\r\n\r\n\t// Fetch step 1.3\r\n\tif (!headers.has('Accept')) {\r\n\t\theaders.set('Accept', '*/*');\r\n\t}\r\n\r\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\r\n\tlet contentLengthValue = null;\r\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\r\n\t\tcontentLengthValue = '0';\r\n\t}\r\n\r\n\tif (request.body !== null) {\r\n\t\tconst totalBytes = getTotalBytes(request);\r\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\r\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\r\n\t\t\tcontentLengthValue = String(totalBytes);\r\n\t\t}\r\n\t}\r\n\r\n\tif (contentLengthValue) {\r\n\t\theaders.set('Content-Length', contentLengthValue);\r\n\t}\r\n\r\n\t// 4.1. Main fetch, step 2.6\r\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\r\n\t// > default referrer policy.\r\n\tif (request.referrerPolicy === '') {\r\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\r\n\t}\r\n\r\n\t// 4.1. Main fetch, step 2.7\r\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\r\n\t// > determine request's referrer.\r\n\tif (request.referrer && request.referrer !== 'no-referrer') {\r\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\r\n\t} else {\r\n\t\trequest[INTERNALS].referrer = 'no-referrer';\r\n\t}\r\n\r\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\r\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\r\n\t// >  and isomorphic encoded, to httpRequest's header list.\r\n\tif (request[INTERNALS].referrer instanceof URL) {\r\n\t\theaders.set('Referer', request.referrer);\r\n\t}\r\n\r\n\t// HTTP-network-or-cache fetch step 2.11\r\n\tif (!headers.has('User-Agent')) {\r\n\t\theaders.set('User-Agent', 'node-fetch');\r\n\t}\r\n\r\n\t// HTTP-network-or-cache fetch step 2.15\r\n\tif (request.compress && !headers.has('Accept-Encoding')) {\r\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\r\n\t}\r\n\r\n\tlet {agent} = request;\r\n\tif (typeof agent === 'function') {\r\n\t\tagent = agent(parsedURL);\r\n\t}\r\n\r\n\t// HTTP-network fetch step 4.2\r\n\t// chunked encoding is handled by Node.js\r\n\r\n\tconst search = getSearch(parsedURL);\r\n\r\n\t// Pass the full URL directly to request(), but overwrite the following\r\n\t// options:\r\n\tconst options = {\r\n\t\t// Overwrite search to retain trailing ? (issue #776)\r\n\t\tpath: parsedURL.pathname + search,\r\n\t\t// The following options are not expressed in the URL\r\n\t\tmethod: request.method,\r\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\r\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\r\n\t\tagent\r\n\t};\r\n\r\n\treturn {\r\n\t\t/** @type {URL} */\r\n\t\tparsedURL,\r\n\t\toptions\r\n\t};\r\n};\r\n", "export const getSearch = parsedURL => {\r\n\tif (parsedURL.search) {\r\n\t\treturn parsedURL.search;\r\n\t}\r\n\r\n\tconst lastOffset = parsedURL.href.length - 1;\r\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\r\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\r\n};\r\n", "import {isIP} from 'node:net';\r\n\r\n/**\r\n * @external URL\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/URL|URL}\r\n */\r\n\r\n/**\r\n * @module utils/referrer\r\n * @private\r\n */\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#strip-url|Referrer Policy §8.4. Strip url for use as a referrer}\r\n * @param {string} URL\r\n * @param {boolean} [originOnly=false]\r\n */\r\nexport function stripURLForUseAsAReferrer(url, originOnly = false) {\r\n\t// 1. If url is null, return no referrer.\r\n\tif (url == null) { // eslint-disable-line no-eq-null, eqeqeq\r\n\t\treturn 'no-referrer';\r\n\t}\r\n\r\n\turl = new URL(url);\r\n\r\n\t// 2. If url's scheme is a local scheme, then return no referrer.\r\n\tif (/^(about|blob|data):$/.test(url.protocol)) {\r\n\t\treturn 'no-referrer';\r\n\t}\r\n\r\n\t// 3. Set url's username to the empty string.\r\n\turl.username = '';\r\n\r\n\t// 4. Set url's password to null.\r\n\t// Note: `null` appears to be a mistake as this actually results in the password being `\"null\"`.\r\n\turl.password = '';\r\n\r\n\t// 5. Set url's fragment to null.\r\n\t// Note: `null` appears to be a mistake as this actually results in the fragment being `\"#null\"`.\r\n\turl.hash = '';\r\n\r\n\t// 6. If the origin-only flag is true, then:\r\n\tif (originOnly) {\r\n\t\t// 6.1. Set url's path to null.\r\n\t\t// Note: `null` appears to be a mistake as this actually results in the path being `\"/null\"`.\r\n\t\turl.pathname = '';\r\n\r\n\t\t// 6.2. Set url's query to null.\r\n\t\t// Note: `null` appears to be a mistake as this actually results in the query being `\"?null\"`.\r\n\t\turl.search = '';\r\n\t}\r\n\r\n\t// 7. Return url.\r\n\treturn url;\r\n}\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy|enum ReferrerPolicy}\r\n */\r\nexport const ReferrerPolicy = new Set([\r\n\t'',\r\n\t'no-referrer',\r\n\t'no-referrer-when-downgrade',\r\n\t'same-origin',\r\n\t'origin',\r\n\t'strict-origin',\r\n\t'origin-when-cross-origin',\r\n\t'strict-origin-when-cross-origin',\r\n\t'unsafe-url'\r\n]);\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#default-referrer-policy|default referrer policy}\r\n */\r\nexport const DEFAULT_REFERRER_POLICY = 'strict-origin-when-cross-origin';\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#referrer-policies|Referrer Policy §3. Referrer Policies}\r\n * @param {string} referrerPolicy\r\n * @returns {string} referrerPolicy\r\n */\r\nexport function validateReferrerPolicy(referrerPolicy) {\r\n\tif (!ReferrerPolicy.has(referrerPolicy)) {\r\n\t\tthrow new TypeError(`Invalid referrerPolicy: ${referrerPolicy}`);\r\n\t}\r\n\r\n\treturn referrerPolicy;\r\n}\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy|Referrer Policy §3.2. Is origin potentially trustworthy?}\r\n * @param {external:URL} url\r\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\r\n */\r\nexport function isOriginPotentiallyTrustworthy(url) {\r\n\t// 1. If origin is an opaque origin, return \"Not Trustworthy\".\r\n\t// Not applicable\r\n\r\n\t// 2. Assert: origin is a tuple origin.\r\n\t// Not for implementations\r\n\r\n\t// 3. If origin's scheme is either \"https\" or \"wss\", return \"Potentially Trustworthy\".\r\n\tif (/^(http|ws)s:$/.test(url.protocol)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// 4. If origin's host component matches one of the CIDR notations 127.0.0.0/8 or ::1/128 [RFC4632], return \"Potentially Trustworthy\".\r\n\tconst hostIp = url.host.replace(/(^\\[)|(]$)/g, '');\r\n\tconst hostIPVersion = isIP(hostIp);\r\n\r\n\tif (hostIPVersion === 4 && /^127\\./.test(hostIp)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (hostIPVersion === 6 && /^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(hostIp)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// 5. If origin's host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\r\n\t// We are returning FALSE here because we cannot ensure conformance to\r\n\t// let-localhost-be-loalhost (https://tools.ietf.org/html/draft-west-let-localhost-be-localhost)\r\n\tif (url.host === 'localhost' || url.host.endsWith('.localhost')) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// 6. If origin's scheme component is file, return \"Potentially Trustworthy\".\r\n\tif (url.protocol === 'file:') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// 7. If origin's scheme component is one which the user agent considers to be authenticated, return \"Potentially Trustworthy\".\r\n\t// Not supported\r\n\r\n\t// 8. If origin has been configured as a trustworthy origin, return \"Potentially Trustworthy\".\r\n\t// Not supported\r\n\r\n\t// 9. Return \"Not Trustworthy\".\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy|Referrer Policy §3.3. Is url potentially trustworthy?}\r\n * @param {external:URL} url\r\n * @returns `true`: \"Potentially Trustworthy\", `false`: \"Not Trustworthy\"\r\n */\r\nexport function isUrlPotentiallyTrustworthy(url) {\r\n\t// 1. If url is \"about:blank\" or \"about:srcdoc\", return \"Potentially Trustworthy\".\r\n\tif (/^about:(blank|srcdoc)$/.test(url)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// 2. If url's scheme is \"data\", return \"Potentially Trustworthy\".\r\n\tif (url.protocol === 'data:') {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Note: The origin of blob: and filesystem: URLs is the origin of the context in which they were\r\n\t// created. Therefore, blobs created in a trustworthy origin will themselves be potentially\r\n\t// trustworthy.\r\n\tif (/^(blob|filesystem):$/.test(url.protocol)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// 3. Return the result of executing §3.2 Is origin potentially trustworthy? on url's origin.\r\n\treturn isOriginPotentiallyTrustworthy(url);\r\n}\r\n\r\n/**\r\n * Modifies the referrerURL to enforce any extra security policy considerations.\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\r\n * @callback module:utils/referrer~referrerURLCallback\r\n * @param {external:URL} referrerURL\r\n * @returns {external:URL} modified referrerURL\r\n */\r\n\r\n/**\r\n * Modifies the referrerOrigin to enforce any extra security policy considerations.\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}, step 7\r\n * @callback module:utils/referrer~referrerOriginCallback\r\n * @param {external:URL} referrerOrigin\r\n * @returns {external:URL} modified referrerOrigin\r\n */\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#determine-requests-referrer|Referrer Policy §8.3. Determine request's Referrer}\r\n * @param {Request} request\r\n * @param {object} o\r\n * @param {module:utils/referrer~referrerURLCallback} o.referrerURLCallback\r\n * @param {module:utils/referrer~referrerOriginCallback} o.referrerOriginCallback\r\n * @returns {external:URL} Request's referrer\r\n */\r\nexport function determineRequestsReferrer(request, {referrerURLCallback, referrerOriginCallback} = {}) {\r\n\t// There are 2 notes in the specification about invalid pre-conditions.  We return null, here, for\r\n\t// these cases:\r\n\t// > Note: If request's referrer is \"no-referrer\", Fetch will not call into this algorithm.\r\n\t// > Note: If request's referrer policy is the empty string, Fetch will not call into this\r\n\t// > algorithm.\r\n\tif (request.referrer === 'no-referrer' || request.referrerPolicy === '') {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// 1. Let policy be request's associated referrer policy.\r\n\tconst policy = request.referrerPolicy;\r\n\r\n\t// 2. Let environment be request's client.\r\n\t// not applicable to node.js\r\n\r\n\t// 3. Switch on request's referrer:\r\n\tif (request.referrer === 'about:client') {\r\n\t\treturn 'no-referrer';\r\n\t}\r\n\r\n\t// \"a URL\": Let referrerSource be request's referrer.\r\n\tconst referrerSource = request.referrer;\r\n\r\n\t// 4. Let request's referrerURL be the result of stripping referrerSource for use as a referrer.\r\n\tlet referrerURL = stripURLForUseAsAReferrer(referrerSource);\r\n\r\n\t// 5. Let referrerOrigin be the result of stripping referrerSource for use as a referrer, with the\r\n\t//    origin-only flag set to true.\r\n\tlet referrerOrigin = stripURLForUseAsAReferrer(referrerSource, true);\r\n\r\n\t// 6. If the result of serializing referrerURL is a string whose length is greater than 4096, set\r\n\t//    referrerURL to referrerOrigin.\r\n\tif (referrerURL.toString().length > 4096) {\r\n\t\treferrerURL = referrerOrigin;\r\n\t}\r\n\r\n\t// 7. The user agent MAY alter referrerURL or referrerOrigin at this point to enforce arbitrary\r\n\t//    policy considerations in the interests of minimizing data leakage. For example, the user\r\n\t//    agent could strip the URL down to an origin, modify its host, replace it with an empty\r\n\t//    string, etc.\r\n\tif (referrerURLCallback) {\r\n\t\treferrerURL = referrerURLCallback(referrerURL);\r\n\t}\r\n\r\n\tif (referrerOriginCallback) {\r\n\t\treferrerOrigin = referrerOriginCallback(referrerOrigin);\r\n\t}\r\n\r\n\t// 8.Execute the statements corresponding to the value of policy:\r\n\tconst currentURL = new URL(request.url);\r\n\r\n\tswitch (policy) {\r\n\t\tcase 'no-referrer':\r\n\t\t\treturn 'no-referrer';\r\n\r\n\t\tcase 'origin':\r\n\t\t\treturn referrerOrigin;\r\n\r\n\t\tcase 'unsafe-url':\r\n\t\t\treturn referrerURL;\r\n\r\n\t\tcase 'strict-origin':\r\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\r\n\t\t\t//    potentially trustworthy URL, then return no referrer.\r\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\r\n\t\t\t\treturn 'no-referrer';\r\n\t\t\t}\r\n\r\n\t\t\t// 2. Return referrerOrigin.\r\n\t\t\treturn referrerOrigin.toString();\r\n\r\n\t\tcase 'strict-origin-when-cross-origin':\r\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\r\n\t\t\t//    return referrerURL.\r\n\t\t\tif (referrerURL.origin === currentURL.origin) {\r\n\t\t\t\treturn referrerURL;\r\n\t\t\t}\r\n\r\n\t\t\t// 2. If referrerURL is a potentially trustworthy URL and request's current URL is not a\r\n\t\t\t//    potentially trustworthy URL, then return no referrer.\r\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\r\n\t\t\t\treturn 'no-referrer';\r\n\t\t\t}\r\n\r\n\t\t\t// 3. Return referrerOrigin.\r\n\t\t\treturn referrerOrigin;\r\n\r\n\t\tcase 'same-origin':\r\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\r\n\t\t\t//    return referrerURL.\r\n\t\t\tif (referrerURL.origin === currentURL.origin) {\r\n\t\t\t\treturn referrerURL;\r\n\t\t\t}\r\n\r\n\t\t\t// 2. Return no referrer.\r\n\t\t\treturn 'no-referrer';\r\n\r\n\t\tcase 'origin-when-cross-origin':\r\n\t\t\t// 1. If the origin of referrerURL and the origin of request's current URL are the same, then\r\n\t\t\t//    return referrerURL.\r\n\t\t\tif (referrerURL.origin === currentURL.origin) {\r\n\t\t\t\treturn referrerURL;\r\n\t\t\t}\r\n\r\n\t\t\t// Return referrerOrigin.\r\n\t\t\treturn referrerOrigin;\r\n\r\n\t\tcase 'no-referrer-when-downgrade':\r\n\t\t\t// 1. If referrerURL is a potentially trustworthy URL and request's current URL is not a\r\n\t\t\t//    potentially trustworthy URL, then return no referrer.\r\n\t\t\tif (isUrlPotentiallyTrustworthy(referrerURL) && !isUrlPotentiallyTrustworthy(currentURL)) {\r\n\t\t\t\treturn 'no-referrer';\r\n\t\t\t}\r\n\r\n\t\t\t// 2. Return referrerURL.\r\n\t\t\treturn referrerURL;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new TypeError(`Invalid referrerPolicy: ${policy}`);\r\n\t}\r\n}\r\n\r\n/**\r\n * @see {@link https://w3c.github.io/webappsec-referrer-policy/#parse-referrer-policy-from-header|Referrer Policy §8.1. Parse a referrer policy from a Referrer-Policy header}\r\n * @param {Headers} headers Response headers\r\n * @returns {string} policy\r\n */\r\nexport function parseReferrerPolicyFromHeader(headers) {\r\n\t// 1. Let policy-tokens be the result of extracting header list values given `Referrer-Policy`\r\n\t//    and response’s header list.\r\n\tconst policyTokens = (headers.get('referrer-policy') || '').split(/[,\\s]+/);\r\n\r\n\t// 2. Let policy be the empty string.\r\n\tlet policy = '';\r\n\r\n\t// 3. For each token in policy-tokens, if token is a referrer policy and token is not the empty\r\n\t//    string, then set policy to token.\r\n\t// Note: This algorithm loops over multiple policy values to allow deployment of new policy\r\n\t// values with fallbacks for older user agents, as described in § 11.1 Unknown Policy Values.\r\n\tfor (const token of policyTokens) {\r\n\t\tif (token && ReferrerPolicy.has(token)) {\r\n\t\t\tpolicy = token;\r\n\t\t}\r\n\t}\r\n\r\n\t// 4. Return policy.\r\n\treturn policy;\r\n}\r\n", "import {FetchBaseError} from './base.js';\r\n\r\n/**\r\n * AbortError interface for cancelled requests\r\n */\r\nexport class AbortError extends FetchBaseError {\r\n\tconstructor(message, type = 'aborted') {\r\n\t\tsuper(message, type);\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_node_http", "import_node_stream", "import_node_buffer", "Stream", "import_node_util", "http", "INTERNALS", "import_node_util", "INTERNALS", "formatUrl", "response", "https", "http", "Stream", "pump", "zlib"]
}
